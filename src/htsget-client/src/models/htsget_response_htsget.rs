/* 
 * htsget
 *
 * This data retrieval API bridges from existing genomics bulk data transfers to a client/server model
 *
 * OpenAPI spec version: 1.1.1
 * Contact: security-notification@ga4gh.org
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct HtsgetResponseHtsget {
  #[serde(rename = "format")]
  format: String,
  #[serde(rename = "urls")]
  urls: Vec<::models::UrlsItems>,
  #[serde(rename = "md5")]
  md5: Option<String>
}

impl HtsgetResponseHtsget {
  pub fn new(format: String, urls: Vec<::models::UrlsItems>) -> HtsgetResponseHtsget {
    HtsgetResponseHtsget {
      format: format,
      urls: urls,
      md5: None
    }
  }

  pub fn set_format(&mut self, format: String) {
    self.format = format;
  }

  pub fn with_format(mut self, format: String) -> HtsgetResponseHtsget {
    self.format = format;
    self
  }

  pub fn format(&self) -> &String {
    &self.format
  }


  pub fn set_urls(&mut self, urls: Vec<::models::UrlsItems>) {
    self.urls = urls;
  }

  pub fn with_urls(mut self, urls: Vec<::models::UrlsItems>) -> HtsgetResponseHtsget {
    self.urls = urls;
    self
  }

  pub fn urls(&self) -> &Vec<::models::UrlsItems> {
    &self.urls
  }


  pub fn set_md5(&mut self, md5: String) {
    self.md5 = Some(md5);
  }

  pub fn with_md5(mut self, md5: String) -> HtsgetResponseHtsget {
    self.md5 = Some(md5);
    self
  }

  pub fn md5(&self) -> Option<&String> {
    self.md5.as_ref()
  }

  pub fn reset_md5(&mut self) {
    self.md5 = None;
  }

}



